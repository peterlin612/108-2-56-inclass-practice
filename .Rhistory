screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco <- as.character(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco <- as.character(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- students10$姓名(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco_practice
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco <- students10$姓名[ntpu_eco_practice]
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco <- students10$姓名[ntpu_eco_practice]
ntpu_eco
congrats <- ("恭喜",as.character(ntpu_eco),"同學錄取國立台北大學經濟系")
congrats <- ("恭喜"as.character(ntpu_eco)"同學錄取國立台北大學經濟系")
congrats <- ("恭喜","as.character(ntpu_eco)","同學錄取國立台北大學經濟系")
congrats <- as.character(ntpu_eco)
congrats <- as.character(ntpu_eco)
congrats
congrats <- print(as.character(ntpu_eco))
congrats
congrats <- print(c("恭喜",as.character(ntpu_eco))
congrats
congrats <- as.character(ntpu_eco)
print("恭喜",congrats)
congrats <- as.character(ntpu_eco)
print(c("恭喜",congrats))
congrats <- as.character(ntpu_eco)
paste(c("恭喜",congrats))
congrats <- as.character(ntpu_eco)
paste(c("恭喜",congrats))
congrats <- as.character(ntpu_eco)
paste(c("恭喜",congrats))
congrats <- as.character(ntpu_eco)
paste("ej","op")
congrats <- as.character(ntpu_eco)
paste("恭喜",congrats,"同學錄取國立台北大學經濟系")
congrats <- as.character(ntpu_eco)
paste("恭喜",congrats,"同學錄取國立台北大學經濟系")
print("恭喜,congrats,"國")
congrats <- as.character(ntpu_eco)
paste("恭喜",congrats,"同學錄取國立台北大學經濟系")
paste("恭喜,congrats,"國")
congrats <- as.character(ntpu_eco)
paste("恭喜",congrats,"同學錄取國立台北大學經濟系")
print("恭喜",congrats,"國")
congrats <- as.character(ntpu_eco)
paste("恭喜",congrats,"同學錄取國立台北大學經濟系")
paste("恭喜",congrats,"國")
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175,
166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11",
"1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚",
"3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung",
"Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O"))
love_food <- str_detect(example$hobby) =="美食"
love_food <- str_detect(example$hobby) =="美食"
love_food <- str_detect(example$hobby,"美食")
love_food <- str_detect(example$hobby,"美食")
love_food
love_food <- str_detect(example$hobby,"美食")
example$hobby[love_food]
love_food <- str_detect(example$hobby,"美食")
example$name[love_food]
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- screen_1&screen_2
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
chinese <- as.factor(students10$國文+1)
pick_ntpu <- str_detect(as.character(students10$志願),"北大")
students10$姓名[pick_ntpu] -> ntpu_namelist
ntpu_namelist
pick_ntpu <- str_detect(as.character(students10$志願),"北大")
students10$姓名[pick_ntpu] -> ntpu_namelist
ntpu_namelist
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical (ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
ntpu_eco_1 <- students10$姓名[pick_ntpu_eco]
pick_ch_over12 <-students10$國文 >=12
screen_1 <- students10$姓名[pick_ch_over12]
pick_enma_over26 <- students10$英文+students10$數學 >=26
screen_2 <- students10$姓名[pick_enma_over26]
ntpu_eco_practice <- as.logical(ntpu_eco_1*screen_1*screen_2)
pick_ntpu_eco <- students10$志願 =="北大經濟"
pick_ch_over12 <-students10$國文 >=12
pick_enma_over26 <- students10$英文+students10$數學 >=26
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
pick_ntpu_eco <- students10$志願 =="北大經濟"
pick_ch_over12 <-students10$國文 >=12
pick_enma_over26 <- students10$英文+students10$數學 >=26
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco <- students10$姓名[ntpu_eco_practice]
pick_ntpu_eco <- students10$志願 =="北大經濟"
pick_ch_over12 <-students10$國文 >=12
pick_enma_over26 <- students10$英文+students10$數學 >=26
ntpu_eco_practice <- as.logical(pick_ntpu_eco*pick_ch_over12*pick_enma_over26)
ntpu_eco <- students10$姓名[ntpu_eco_practice]
ntpu_eco
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175,
166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11",
"1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚",
"3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung",
"Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O"))
example$name[example$height%example$bloodType]
blood_type <- example$bloodType
height <- example$height
example$name[blood_type&height] == 175,"A"
blood_type <- example$bloodType
height <- example$height
example$name[blood_type&height] == (175,"A")
blood_type <- example$bloodType
height <- example$height
example$name[blood_type&height] == ("A",175)
blood_type <- example$bloodType
height <- example$height
name_of the person <-  example$name[blood_type&height] == ("A",175)
blood_type <- example$bloodType
height <- example$height
name_of_the_person <-  example$name[blood_type&height] == ("A",175)
transcript100to103[["學屆"]]
class(blood_type)
class(height)
blood_type <- example$bloodType
height <- example$height
example$name[blood_type&height]
blood_type <- example$bloodType
height <- example$height
example$name[blood_type & height]
blood_type <- example$bloodType
height <- example$height
example$name [blood_type & height]
blood_type <- example$bloodType
height <- example$height
example$name [blood_type]
blood_type <- example$bloodType
height <- example$height
example$name[blood_type]
blood_type <- example$bloodType
height <- example$height
example$name[example$bloodType]
blood_type <- example$bloodType
height <- example$height
example$name[example$allowance]
blood_type <- example$bloodType
height <- example$height
example$name[example$bloodType]
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175,
166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11",
"1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚",
"3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung",
"Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O"))
blood_type <- example$bloodType
height <- example$height
example$name[example$bloodType]
blood_type <- example$bloodType
height <- example$height
example$bloodType
blood_type <- example$bloodType
height <- example$height
example$bloodType
example$name[example$height]
blood_type -> example$bloodType
height -> example$height
example$bloodType
example$name[example$height]
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175,
166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11",
"1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚",
"3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung",
"Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")),
bloodType = c("A", "B", "B", "O"))
example$name[example$height]
str(c(example$name,example$height))
example$name[example$allowance]
example$name[example$height]
example$name[example$weight&example$allowance]
str(example)
pick_above170 <- example$height >= 170
pick_bloodB <- example$bloodType == "B"
pick_loveFood <- stringr::str_detect(example$hobby, "美食")
pick_na <- is.na(example$weight)
pick_after98 <- example$birthday >= lubridate::ymd("1998-01-01")
set_TaipeiMetro <- c("Taipei", "New Taipei")
pick_fromTaipeiMetro <- example$residence %in% set_TaipeiMetro
pick_above170 <- example$height >=170
pick_bloodB <- example$bloodType =="B"
example$name[pick_above170&pick_bloodB]
pick_above170 <- example$height >=170
pick_bloodB <- example$bloodType =="B"
example$name[pick_above170|pick_bloodB]
pick_above170 <- example$height >=170
pick_bloodB <- example$bloodType =="B"
example$name[pick_above170|!pick_bloodB]
pick_above170 <- example$height >=170
pick_bloodB <- example$bloodType =="B"
example$name[pick_above170&!pick_bloodB]
install.packages("stringr")
install.packages("glue")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr)
install.packages("stringr")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
install.packages("glue")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr) library(glue)
library(stringr)
library(glue)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr)
library(glue)
library(lubridate)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr)
library(glue)
library(lubridate)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
library(stringr)
library(glue)
library(lubridate)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
# 是否來自107或108學屆
str_detect(studentIds, "107|108")
strip1 <- "[0-9]"
strip2 <- "(櫻桃|777|紅心)"  # 字群組合strip因為等下放中間所以用()括起來
strip3 <- "[A-Z]"
myRegexSlotMachine <- paste0(strip1, strip2, strip3)
print(myRegexSlotMachine)
library(stringr)
library(glue)
library(stringr)
library(glue)
install.packages("stringr")
install.packages("stringr")
install.packages("glue")
library(stringr)
library(glue)
str_sub("410873002", 5, 6)
str_extract_all(c("民國108年12月5日", "民國98年10月5日"), "(?<=民國)[0-9]{2,3}(?=年)")  # 回傳list
str_extract(c("民國108年12月5日", "民國98年10月5日"), "(?<=民國)[0-9]{2,3}(?=年)")  # 回傳vector
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
Ids <- c("A283743192", "B829103720", "A10920402", "C291022384")
str_view_all(Ids, "[AC]")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
stringr::str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108
stringr::str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
stringr::str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
stringr::str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
stringr::str_view_all(studentIds, "(107|108)")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_detect(studentIds,"107,108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_detect(studentIds,"107","108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_detect(studentIds,"107"|"108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_detect(studentIds,("107"|"108"))
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_detect(studentIds, "107|108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_view_all(studentIds, "107|108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_view_all(studentIds,"107|108")
studentIds <- c("410873029", "410773005", "410772035", "410562123")
str_view_all(studentIds, ("107|108"))
Ids <- c("A283743192", "B829103720", "A10920402", "C291022384")
str_view_all(Ids, "[AC]")
install.packages("htmlwidgets")
Ids <- c("A283743192", "B829103720", "A10920402", "C291022384")
str_view_all(Ids, "[AC]")
str_detect(Ids, "[AC]")  # 偵測 出現A、C
str_extract(Ids, "[A-Z]")  # 取出 A-Z的字元
studentIds
studentIds
str_detect(studentIds,"107|108")
studentIds
str_detect(studentIds,"107|108")
str_view_all(studentIds"107|108")
studentIds
str_detect(studentIds,"107|108")
str_view_all(studentIds,"107|108")
Ids <- c("A283743192", "B829103720", "A10920402", "C291022384")
str_view_all(Ids, "[AC]")
str_detect(Ids, "[AC]")  # 偵測 出現A、C
str_extract(Ids, "[A-Z]")  # 取出 A-Z的字元
str_detect(Ids, "[AC]")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
str_extract_all(twoNames, "段(兄|兄弟)")
str_extract_all(twoNames, "段(兄|兄ek )")
pattern <- paste0("段(兄|兄弟)",back_regex)
str_view('10櫻桃A')
str_view('10櫻桃A'),pattern(myRegexSlotMachine)
str_view('10櫻桃A'),pattern=myRegexSlotMachine
str_view('10櫻桃A'),pattern=myRegexSlotMachine
str_view(('10櫻桃A'),pattern=myRegexSlotMachine)
str_view(twoNames)
pattern <- paste0("段(兄|兄弟)",back_regex)
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses, myRegexSlotMachine)
addresses <- c("臺中市后里區公館里尾社路385號", "新竹市東區科學園路125號1樓",
"新竹市北區竹光路99號", "金門縣金城鎮賢庵里山前33號", "臺中市南屯區工業區二十四路23號1樓")
str_view(('10櫻桃A'),pattern=myRegexSlotMachine)
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses, myRegexSlotMachine)
str_extract(addresses, myRegexSlotMachine)
str_view_all(addresses, "[0-9]+")  # 樓號也會選到
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses, myRegexSlotMachine)
str_extract(addresses, myRegexSlotMachine)
str_view_all(addresses, "[0-9]+")  # 樓號也會選到
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
pick_ntpu <- str_detect(as.character(students10$姓名,"北大"))
pick_ntpu <- str_detect(as.character(students10$志願,"北大"))
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
pick_ntpu <- str_detect(as.character(students10$志願,"北大"))
pick_ntpu <- str_detect(as.character(students10$志願,"北大"))
pick_ntpu <- str_detect(as.character(students10$志願),"北大")
students10$姓名[pick_ntpu]
pick_ch_over_12 <- students10$國文>= 12
pick_enma_over_26 <- students10$英文+students10$數學 >= 26
ntpu_practice <- as.logical(pick_ntpu*pick_enma_over_26*pick_ch_over_12)
students10$姓名[ntpu_practice]
pick_ch_over_12 <- students10$國文>= 12
pick_enma_over_26 <- students10$英文+students10$數學 >= 26
ntpu_practice <- as.logical(pick_ntpu*pick_enma_over_26*pick_ch_over_12)
ntpu_eco <- students10$姓名[ntpu_practice]
pick_ch_over_12 <- students10$國文>= 12
pick_enma_over_26 <- students10$英文+students10$數學 >= 26
ntpu_practice <- as.logical(pick_ntpu*pick_enma_over_26*pick_ch_over_12)
ntpu_eco <- students10$姓名[ntpu_practice]
ntpu_eco
paste("恭喜",ntpu_eco,"同學錄取國立臺北大學經濟系")
congrats <- paste("恭喜",ntpu_eco,"同學錄取國立臺北大學經濟系")
congrats
pick_admitted <- students10$姓名 %in% namelist
students10$姓名[pick_admitted] -> congrats
paste("恭喜",congrats,"同學錄取國立臺北大學經濟系",sep=" ") ->
congrats
# congrats
pick_admitted <- students10$姓名 %in% namelist
students10$姓名[pick_admitted] -> congrats
paste("恭喜",congrats,"同學錄取國立臺北大學經濟系",sep=" ") ->
congrats
congrats
# congrats
c(as.character(students10$志願) == "北大經濟") -> pick_eco
c(students10$國文 >= 12) -> pick_chineseFit
c(students10$英文+students10$數學 >= 26) -> pick_mathEngFit
pick_pass1stLevel <- as.logical(pick_eco*pick_chineseFit*pick_mathEngFit)
students10$姓名[pick_pass1stLevel] ->
ntpu_eco
ntpu_eco
# ntpu_econtpu_eco
View(students10)
pick_admitted <- students10$姓名 %in% namelist
students10$姓名[pick_admitted] -> congrats
paste("恭喜",congrats,"同學錄取國立臺北大學經濟系",sep=" ") ->
congrats
# congrats
pick_admitted <- students10$姓名 %in% namelist
students10$姓名[pick_admitted] -> congrats
paste("恭喜",congrats,"同學錄取國立臺北大學經濟系",sep=" ") ->
congrats
congrats
# congrats
