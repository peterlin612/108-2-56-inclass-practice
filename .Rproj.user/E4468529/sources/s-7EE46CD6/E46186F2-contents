```{r}
list_victimAges_female <- jsonlite::fromJSON("https://www.dropbox.com/s/3uijub7xheib405/list_victimAges_female.json?dl=1", 
    simplifyDataFrame = F)
```
```{r}
str(list_victimAges_female)
View(list_victimAges_female$數目)
sum(list_victimAges_female$數目)
sum(list_victimAges_female$數目, na.rm = T)
```
```{r}
levels_ages <- levels(list_victimAges_female$年齡層)
levels_age <- 
print(levels_ages)
```
```{r}
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175, 
    166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11", 
    "1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚", 
    "3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung", 
    "Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")), 
    bloodType = c("A", "B", "B", "O"))
```
```{r}
print(example[c("name", "bloodType")])

pick_bloodB <- example$bloodType == "B"
example$name[pick_bloodB]
```
```{r}
sqnumbers <- c(1,2,3,4,5,6,7,8,9)
evennumbers <- sqnumbers%%2 ==0
sqnumbers[evennumbers]
```
```{r}
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)

pick_evens <- (sequenceNums%%2) == 0
sequenceNums[pick_evens]
```
```{r}
x <- c(1, 5, 8)
y <- c(5, 8)

# x裡的元素值是不是屬於y集合
x %in% y
```

```{r}
y %in% x
```
```{r}
example <- list(name = c("小明", "小花", "小新", "美美"), height = c(175, 
    166, 170, 160), weight = c(77, NA, 60, 43), birthday = lubridate::ymd(c("1998-03-11", 
    "1999-12-22", "1995-08-22", "2001-10-10")), hobby = c("美食 旅遊", "旅遊 時尚", 
    "3C 美食", "音樂 旅遊"), residence = c("Taipei", "New Taipei", "Taichung", 
    "Kaohsiung"), allowance = factor(c("0-1000", "1001-2000", "2000+", "1001-2000")), 
    bloodType = c("A", "B", "B", "O"))
```
```{r}
from_tp <- example$residence ==c("Taipei","New Taipei")
example$name[from_tp]
```
```{r}
love_food <- str_detect(example$hobby,"美食")
example$name[love_food]
```
```{r}
pick_above170 <- example$height >=170
pick_bloodB <- example$bloodType =="B"
example$name[pick_above170&s!pick_bloodB]
```
```{r}
library(stringr)
library(glue)
library(lubridate)
studentIds <- c("410873029", "410773005", "410772035", "410562123")
# 取出學號中的入學屆為107或108


# 是否來自107或108學屆
str_detect(studentIds, "107|108")
```
```{r}
library(stringr)
library(glue)
```
```{r}
str_sub("410873002", 5, 6)
```
```{r}
str_extract_all(c("民國108年12月5日", "民國98年10月5日"), "(?<=民國)[0-9]{2,3}(?=年)")  # 回傳list 

str_extract(c("民國108年12月5日", "民國98年10月5日"), "(?<=民國)[0-9]{2,3}(?=年)")  # 回傳vector 
```
```{r}
studentIds
str_detect(studentIds,"107|108")
str_view_all(studentIds,"107|108")
```
```{r}
Ids <- c("A283743192", "B829103720", "A10920402", "C291022384")

str_view_all(Ids, "[AC]")
str_detect(Ids, "[AC]")  # 偵測 出現A、C

str_extract(Ids, "[A-Z]")  # 取出 A-Z的字元
```
```{r}
str_detect(Ids, "[AC]")
```
```{r}
addresses <- c("臺中市后里區公館里尾社路385號", "新竹市東區科學園路125號1樓", 
    "新竹市北區竹光路99號", "金門縣金城鎮賢庵里山前33號", "臺中市南屯區工業區二十四路23號1樓")
str_view(('10櫻桃A'),pattern=myRegexSlotMachine)
```
```{r}
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses, myRegexSlotMachine)
str_extract(addresses, myRegexSlotMachine)

str_view_all(addresses, "[0-9]+")  # 樓號也會選到
```

